{"version":3,"sources":["reportWebVitals.ts","index.tsx","App.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","initialState","useState","state","setState","clearState","inputHandler","e","target","id","length","prevState","value","className","isNaN","Number","console","log","copy","splice","pop","calculateInput","j","newArr","i","push","slice","join","eval","displayState","onClick"],"mappings":"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","file":"static/js/main.92cd26e5.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from 'react'\nimport './App.css'\n\nfunction App() {\n  type stateType = number | string | symbol\n  const initialState: stateType[] = ['0']\n\n  const [state, setState] = useState(initialState)\n\n  const clearState = () => setState(initialState)\n\n  const inputHandler = (e: React.BaseSyntheticEvent) => {\n    if (e.target.id === 'decimal') {\n      if (state[state.length - 1] !== '.' && state[state.length - 2] !== '.') {\n        setState((prevState) => [...prevState, e.target.value])\n      }\n    }\n\n    if (e.target.className === 'input-sym') {\n      if (!isNaN(Number(state[state.length - 1]))) {\n        // Check if converted to number, last item in an array is NOT NaN\n        console.log('First math op. Last item is not symbol')\n        setState((prevState) => {\n          console.log('prevState', prevState)\n          return [...prevState, e.target.value]\n        })\n      } else if (\n        e.target.value === '-' &&\n        !isNaN(Number(state[state.length - 2]))\n      ) {\n        console.log('subtract op exception even if last item is a symbol')\n        setState((prevState) => [...prevState, e.target.value])\n      } else if (\n        isNaN(Number(state[state.length - 1])) &&\n        isNaN(Number(state[state.length - 2]))\n      ) {\n        console.log('Last TWO items were symbols, replace it')\n        setState((prevState) => {\n          const copy = [...prevState]\n          copy.splice(copy.length - 2, 2, e.target.value)\n          return copy\n        })\n      } else if (isNaN(Number(state[state.length - 1]))) {\n        console.log('Last item was a symbol, update it')\n        setState((prevState) => {\n          const copy = [...prevState]\n          copy.splice(copy.length - 1, 1, e.target.value)\n          return copy\n        })\n      }\n    }\n\n    if (\n      state.length === 1 &&\n      state[0] === '0' &&\n      e.target.id !== 'decimal' &&\n      e.target.className !== 'input-sym'\n    ) {\n      state.pop()\n      setState((prevState) => [...prevState, e.target.value])\n    } else if (e.target.className === 'input-num') {\n      setState((prevState) => [...prevState, e.target.value])\n    }\n    console.log('state', state)\n    console.log('event fired', e.target.value)\n  }\n\n  const calculateInput = (state: stateType[]) => {\n    let j = 0\n    let newArr: stateType[] = []\n    for (let i = 0; i < state.length; i++) {\n      if (state[i] === '-' && isNaN(Number(state[i - 1]))) {\n        newArr.push(state.slice(i, i + 1).join(''))\n        j = i + 1\n      } else if (isNaN(Number(state[i]))) {\n        // if current index is a symbol\n        newArr.push(Number(state.slice(j, i).join(''))) // first number before math operator\n        newArr.push(state.slice(i, i + 1).join('')) // push math operator to array\n        j = i + 1 // update math op counter\n      }\n    }\n    newArr.push(Number(state.slice(j, state.length).join(''))) // push number after the last math op to array\n    clearState()\n    setState([eval(newArr.join(''))]) // eval usage for convenience >>>EXTREMELY BAD for optimization/performance<<<\n    console.log('newArr', newArr)\n    console.log('final state', state)\n  }\n\n  const displayState = (state: stateType[]) => {\n    return state.join('')\n  }\n  return (\n    <div className='App'>\n      <header className='App-header'>FCC JavaScript Calculator</header>\n      <input id={'display'} value={displayState(state)} />\n      <div className={'input-Display'}>\n        <button\n          className={'special'}\n          id={'equals'}\n          onClick={() => calculateInput(state)}\n          value={'='}\n        >\n          {'\\u003d'}\n        </button>\n        <button\n          className={'input-sym'}\n          id={'add'}\n          onClick={inputHandler}\n          value={'+'}\n        >\n          {'\\u002b'}\n        </button>\n        <button\n          className={'input-sym'}\n          id={'subtract'}\n          onClick={inputHandler}\n          value={'-'}\n        >\n          {'\\u2212'}\n        </button>\n        <button\n          className={'input-sym'}\n          id={'multiply'}\n          onClick={inputHandler}\n          value={'*'}\n        >\n          {'\\u00D7'}\n        </button>\n        <button\n          className={'input-sym'}\n          id={'divide'}\n          onClick={inputHandler}\n          value={'/'}\n        >\n          {'\\u00F7'}\n        </button>\n        <button\n          className={'decimal'}\n          id={'decimal'}\n          onClick={inputHandler}\n          value={'.'}\n        >\n          {'\\u002e'}\n        </button>\n        <button className={'clear'} id={'clear'} onClick={clearState}>\n          {'\\u0043'}\n        </button>\n        <button\n          className={'input-num'}\n          id={'zero'}\n          onClick={inputHandler}\n          value={0}\n        >\n          0\n        </button>\n        <button\n          className={'input-num'}\n          id={'one'}\n          onClick={inputHandler}\n          value={1}\n        >\n          1\n        </button>\n        <button\n          className={'input-num'}\n          id={'two'}\n          onClick={inputHandler}\n          value={2}\n        >\n          2\n        </button>\n        <button\n          className={'input-num'}\n          id={'three'}\n          onClick={inputHandler}\n          value={3}\n        >\n          3\n        </button>\n        <button\n          className={'input-num'}\n          id={'four'}\n          onClick={inputHandler}\n          value={4}\n        >\n          4\n        </button>\n        <button\n          className={'input-num'}\n          id={'five'}\n          onClick={inputHandler}\n          value={5}\n        >\n          5\n        </button>\n        <button\n          className={'input-num'}\n          id={'six'}\n          onClick={inputHandler}\n          value={6}\n        >\n          6\n        </button>\n        <button\n          className={'input-num'}\n          id={'seven'}\n          onClick={inputHandler}\n          value={7}\n        >\n          7\n        </button>\n        <button\n          className={'input-num'}\n          id={'eight'}\n          onClick={inputHandler}\n          value={8}\n        >\n          8\n        </button>\n        <button\n          className={'input-num'}\n          id={'nine'}\n          onClick={inputHandler}\n          value={9}\n        >\n          9\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}